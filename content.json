{"meta":{"title":"AnchengQiao's Blog","subtitle":null,"description":"Enjoy life, use it and figure out how it works.","author":"Ancheng Qiao","url":"https://anchengqiao.github.io"},"pages":[],"posts":[{"title":"基于hexo和github搭建个人博客","slug":"基于hexo和github搭建个人博客","date":"2019-01-31T16:20:51.000Z","updated":"2019-01-31T17:08:33.817Z","comments":true,"path":"2019/02/01/基于hexo和github搭建个人博客/","link":"","permalink":"https://anchengqiao.github.io/2019/02/01/基于hexo和github搭建个人博客/","excerpt":"","text":"基于hexo和github搭建个人博客 过程参考小明同学的文章搭建 -&gt; 使用hexo+github搭建免费个人博客详细教程 这里只是记录一下自己搭建的过程，方便日后查找 安装hexo1$ sudo npm install -g hexo 如果提醒没有npm的话，就直接sudo apt-get install 一下，这里遇到的一个坑是安装的时候，权限有问题，所以我在npm前加了sudo，安静的等一会儿 验证hexo安装123$ mkdir ~/workspace/hexo-doc$ cd ~/workspace/hexo-doc$ hexo init 这里的文件名是可以随便取的，然后到对应的文件夹下执行 hexo init，hexo会执行一些初始化操作，并下载和生产一些基础文件 同时也生成了一个hello_work.md，一个基础的说明页，作为程序员还是比较熟悉的。。这个后面可以删掉 执行 hexo help 12345678910111213141516171819202122232425262728$ hexo helpUsage: hexo &lt;command&gt;Commands: clean Remove generated files and cache. config Get or set configurations. deploy Deploy your website. generate Generate static files. help Get help on a command. init Create a new Hexo folder. list List the information of the site migrate Migrate your site from other system to Hexo. new Create a new post. publish Moves a draft post from _drafts to _posts folder. render Render files with renderer plugins. server Start the server. version Display version information.Global Options: --config Specify config file instead of using _config.yml --cwd Specify the CWD --debug Display all verbose messages in the terminal --draft Display draft posts --safe Disable all plugins and scripts --silent Hide output on consoleFor more help, you can use &apos;hexo help [command]&apos; for the detailed informationor you can check the docs: http://hexo.io/docs/ 这里面我们init基本上一个博客只需要执行一次，然后主要使用的指令有 clean/deploy/generate/server/new这么几条， clean 清理之前生成的文件和缓存 deploy 把静态网页部署到站点上（我们用的是github，这个可以在后面设置） generate 把markdown文件生成为静态网页 server 开启本地服务端进行预览 new 新建一个post 因为hexo在执行init的时候，已经生产了一个demo的helloworld了，所以我们直接执行 hexo generate BTW，hexo执行指令的时候是可以直接执行简称的，比如 hexo generate -&gt; hexo g hexo server -&gt; hexo s 等 生产了静态网页之后，开启本地预览服务 hexo s 12345678910$ hexo sINFO Start processingWARN ===============================================================WARN ========================= ATTENTION! ==========================WARN ===============================================================WARN NexT repository is moving here: https://github.com/theme-nextWARN ===============================================================WARN It&apos;s rebase to v6.0.0 and future maintenance will resume thereWARN ===============================================================INFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 使用浏览器打开http://localhost:4000 就可以看到这个页面了，如果打不开的话可能是由于端口占用，这里可以参考http://blog.liuxianan.com/windows-port-bind.html 尝试解决问题。 修改主题默认的主题不是很好看，我这边看到很多人用的主题是next，我们这里先下载主题 1git clone https://github.com/iissnan/hexo-theme-next themes/next 然后修改目录下的 _config.yml， 将theme项的值改为next即可 重新生成页面 123$ hexo clean$ hexo g$ hexo s 查看本地页面，应该已经切换到了next主题 打开 next 主题的动态效果修改 themes/next/_config.yml， 将 canvas_nest 项改为 true 即可 打开next自动摘要修改 themes/next/_config.yml，auto_excerpt 项 enable 处改为 true， length值为摘要的长度 创建 github pages坑是仓库名要设置为 username.github.io，否则就不是直接的主机页面，后面设置域名的时候会比较麻烦 待续 设置 hexo deploy 到github pages上面去打开 hexo-doc 文件夹下的 _config.yml 文件，添加 deploy 的路径 1234deploy: type: git repo: git@github.com:AnchengQiao/AnchengQiao.github.io.git branch: master 把里面我的用户名换成自己的，之后再通过 hexo deploy (hexo d) 就可以自动推送到 github 上面了 设置自己的域名 github 上面需要在 setting 页面，将 github pages 打开，还有设置 CNAME， CNAME除了在 github setting 那里设置之外，还需要将你的域名设置到source下面 在hexo-doc/source下面创建文件CNAME，CNAME写上你的域名，例如我的就是 anchengqiao.github.io 同时，在域名的设置那里，设置域名为CNAME，转到你的github分配的主机就可以了。 我这里设置的是将 tech.qiaoqiao.fun CNAME转到了 anchengqiao.github.io,然后就可以了。 待续 ..","categories":[],"tags":[]}]}